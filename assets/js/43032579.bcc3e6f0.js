"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[664],{8717:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>u,frontMatter:()=>n,metadata:()=>a,toc:()=>o});var s=i(4848),c=i(8453);const n={title:"Object Structure",sidebar_position:1},r="Object structure",a={id:"Facet Chart/Introductory Topics/objerctStructure",title:"Object Structure",description:"The facet chart consists of Facet objects and Item objects. A stack of fact objects is maintained and only topmost item is usually being rendered.. Each facet contains array of items, each individual item represents a single entry in the chart.",source:"@site/docs/Facet Chart/Introductory Topics/objerctStructure.md",sourceDirName:"Facet Chart/Introductory Topics",slug:"/Facet Chart/Introductory Topics/objerctStructure",permalink:"/Documentation/docs/Facet Chart/Introductory Topics/objerctStructure",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Facet Chart/Introductory Topics/objerctStructure.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Object Structure",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Supported Browsers",permalink:"/Documentation/docs/Overview/supportedBrowsers"},next:{title:"Data function",permalink:"/Documentation/docs/Facet Chart/Examples/Data Sources/dataFunction"}},d={},o=[{value:"Facet fields",id:"facet-fields",level:3},{value:"Item fields",id:"item-fields",level:3},{value:"ItemValue fields",id:"itemvalue-fields",level:3},{value:"Api methods",id:"api-methods",level:3}];function l(e){const t={code:"code",h1:"h1",h3:"h3",li:"li",p:"p",ul:"ul",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"object-structure",children:"Object structure"}),"\n",(0,s.jsx)(t.p,{children:"The facet chart consists of Facet objects and Item objects. A stack of fact objects is maintained and only topmost item is usually being rendered.. Each facet contains array of items, each individual item represents a single entry in the chart.\nThe following read-only fields are available. All other fields in the objects are considered internal and subject to change. Each object also has a collection of style fields you can assign to, described in the style section."}),"\n",(0,s.jsx)(t.h3,{id:"facet-fields",children:"Facet fields"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"id"})," - facet id"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"data[]"})," - pie data as received from data source"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"items"})," - array of currently visible items"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"parentItem"})," - item in facet up in stack that was drilled down into"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"activeItemId"})," - drilled down item id - for background facets only"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"offset"})," - offset in data for visible items"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"count"})," - number of visible items"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"item-fields",children:"Item fields"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"id"})," - item id"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"facet"})," - owner facet object"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"innerFacet"})," - drilled down facet object - if the item item is expanded"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"index"})," - index in the data array"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"data"})," - item data as received from data source"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"values[]"})," - array of ItemValue objects representing individual values. Each array item corresponds to item in settings.series array."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"expandable"})," - if clicking on the item will expand it, true or false"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"selected"})," - if is selected, true or false"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"active"})," - if is under the cursor, true or false"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"itemvalue-fields",children:"ItemValue fields"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"value"})," - actual value derived form data"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"api-methods",children:"Api methods"}),"\n",(0,s.jsx)(t.p,{children:"The following chart API methods return chart objects:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"chart.getActiveFacets()"})," - returns array of facet objects representing stack of all drilled down facets. - Last being the topmost."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"chart.getActiveFacet()"}),"- returns active facet."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"chart.getActiveItems()"})," - returns array of currently visible items for active facet."]}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var s=i(6540);const c={},n=s.createContext(c);function r(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),s.createElement(n.Provider,{value:t},e.children)}}}]);