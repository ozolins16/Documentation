"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[6294],{1287:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>i,toc:()=>l});var a=n(4848),s=n(8453);const o={title:"Stacked Colored",sidebar_position:2},r="Series - stacked colors.",i={id:"Facet Chart/Examples/Series/stackedColored",title:"Stacked Colored",description:"",source:"@site/docs/Facet Chart/Examples/Series/stackedColored.md",sourceDirName:"Facet Chart/Examples/Series",slug:"/Facet Chart/Examples/Series/stackedColored",permalink:"/Documentation/docs/Facet Chart/Examples/Series/stackedColored",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Facet Chart/Examples/Series/stackedColored.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Stacked Colored",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Side By Side",permalink:"/Documentation/docs/Facet Chart/Examples/Series/sideBySide"},next:{title:"Value Labels",permalink:"/Documentation/docs/Facet Chart/Examples/Series/valueLabels"}},c={},l=[];function d(e){const t={code:"code",h1:"h1",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"series---stacked-colors",children:"Series - stacked colors."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:'    var t = new FacetChart({\n        container: document.getElementById("demo"),\n        data: {\n            url: "/dvsl/data/facet-chart/US-economy-by-industry.json"\n        },\n        facetAxis: {\n            size: 70\n        },\n        stacks: {\n            "s1": {\n                type: "normal",\n                separateNegativeValues: false\n            }\n        },\n        series: [\n            {\n                name: "2011",\n                data: { field: "2011" },\n                style: { fillColor: "lightgray" },\n                stack: "s1"\n            },\n            {\n                name: "increase in 2012",\n                id: "change",\n                data: { valueFunction: function (data) { return parseFloat(data["2012"]) - parseFloat(data["2011"]); } },\n                stack: "s1"\n            }\n        ],\n        items: {\n            styleFunction: function (item, data) {\n                item.label = data.name;\n\n                for (var i = 0; i < item.values.length; i++) {\n                    var itemVal = item.values[i];\n\n                    if (itemVal.seriesId !== "change")\n                        continue;\n\n                    if (itemVal.value < 0) {\n                        itemVal.style.fillColor = "red";\n                    } else {\n                        itemVal.style.fillColor = "green";\n                    }\n                }\n            }\n        }\n    });\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>i});var a=n(6540);const s={},o=a.createContext(s);function r(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);