"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9524],{249:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var a=n(4848),o=n(8453);const s={title:"Contents Function",sidebar_position:1},i="Contents function.",r={id:"Facet Chart/Examples/Info Popup/contentsFunction",title:"Contents Function",description:"",source:"@site/docs/Facet Chart/Examples/Info Popup/contentsFunction.md",sourceDirName:"Facet Chart/Examples/Info Popup",slug:"/Facet Chart/Examples/Info Popup/contentsFunction",permalink:"/Documentation/docs/Facet Chart/Examples/Info Popup/contentsFunction",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Facet Chart/Examples/Info Popup/contentsFunction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Contents Function",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Facet Chart Wifi Like Visualization",permalink:"/Documentation/docs/Facet Chart/Examples/Gallery/wifiLikeVisualization"},next:{title:"Value Formatter Function",permalink:"/Documentation/docs/Facet Chart/Examples/Info Popup/valueFormatterFunction"}},c={},d=[];function l(e){const t={code:"code",h1:"h1",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.h1,{id:"contents-function",children:"Contents function."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{className:"language-js",children:"    var chart = new FacetChart({\n        container: document.getElementById(\"demo\"),\n        data: {\n            url: \"/dvsl/data/facet-chart/US-economy-by-industry.json\"\n        },\n        facetAxis: {\n            size: 70\n        },\n        series: [\n            {\n                name: \"2011\",\n                data: { field: \"2011\" }\n            },\n            {\n                name: \"2012\",\n                data: { field: \"2012\" },\n                style: { fillColor: \"lightgray\" }\n            }\n        ],\n        info: {\n            advanced: {\n                showHeader: false, // disable the built-in header\n                contentsFunction: function (data, activeSeries, range) {\n                    var out = '';\n\n                    // get the name of the series that is currently hovered.\n                    var seriesName = activeSeries && activeSeries['name'] ? activeSeries['name'] : \"\";\n\n                    // retrieve the data item that is being hovered.\n                    var dataItem = chart.getActiveFacet().items.find(function (o) { return o.index === range[0] });\n\n                    // add the header (since the default was disabled above)\n                    var headerTxt = '<small>Custom header for</small> ' + dataItem.data.name + \" \" + seriesName;\n                    out += '<strong style=\"text-align:right\">' + headerTxt + '</strong>';\n\n                    // the data object contains a list of all stacks defined in the configuration.\n                    var diff = 0;\n\n                    // if no stacks are used, it will contain a separate stack for each series.\n                    for (var stackIndex = 0; stackIndex < data.length; stackIndex++) {\n                        var stack = data[stackIndex];\n\n                        // add series \"header\" if there is more than one series defined in the stack\n                        if (stack.name && stack.data.length > 1) {\n                            out += '<h3>' + stack.name + '</h3>';\n                        }\n\n                        // each stack contains a list of series\n                        for (var seriesIndex = 0; seriesIndex < stack.data.length; seriesIndex++) {\n                            var series = stack.data[seriesIndex];\n\n                            // use the same color as provided in the series configuration\n                            var color = series.config.style.fillColor || series.config.style.lineColor;\n                            out += '<tr><td style=\"';\n                            out += 'color: ' + color + ';';\n\n                            // when the user hovers on certain series value on the chart, it will be highlighted in the popup\n                            if (activeSeries && series.config.id === activeSeries.id) {\n                                out += 'border-color: ' + color + '; font-weight: bold';\n                            }\n\n                            // note that while it is easier to set just the inline style, those might not work if the \n                            // page contains Content-Security-Policy headers that disable such styles.\n                            // in this case you can use two special attributes that will then be processed by the chart\n                            // to set `style.color` and `style.borderColor`.\n                            // \n                            // if (color) out += ` data-color=\\\"${color}\\\"`;\n                            // if (activeSeries && series.config.id === activeSeries.id) out += ` data-selected`;\n\n                            out += '\">';\n                            out += series.name || stack.name;\n                            out += '</td><td>';\n                            if (!series.values) {\n                                out += 'No data';\n                            } else {\n                                diff = diff == 0 ? series.values.avg : diff - series.values.avg;\n                                out += series.values.avg.toString() + ' $';\n                            }\n                            out += '</td></tr>';\n                        }\n                    }\n\n                    // add an extra row that displays the difference\n                    out += '<tr><td style=\"color:#FF7D7D;\">Increase in 2012</td><td>' + -Math.floor(diff) + ' $</td></tr>';\n                    return '<table cellspacing=\"0\">' + out + '</table>';\n                }\n            }\n        }\n    });\n"})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>r});var a=n(6540);const o={},s=a.createContext(o);function i(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),a.createElement(s.Provider,{value:t},e.children)}}}]);